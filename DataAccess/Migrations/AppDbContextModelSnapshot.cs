// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.Entities.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CarGalleryId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Created AD Username");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("Created By");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Created Computer Name");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created Date");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("text")
                        .HasColumnName("Created IP");

                    b.Property<string>("Descripton")
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModifiedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Modified AD Username");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("Modified By");

                    b.Property<string>("ModifiedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Modified Computer Name");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Modified Date");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("text")
                        .HasColumnName("Modified IP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarGalleryId");

                    b.ToTable("cars", (string)null);
                });

            modelBuilder.Entity("EntityLayer.Entities.CarGallery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("CreatedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Created AD Username");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("Created By");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Created Computer Name");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created Date");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("text")
                        .HasColumnName("Created IP");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModifiedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Modified AD Username");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("Modified By");

                    b.Property<string>("ModifiedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Modified Computer Name");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Modified Date");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("text")
                        .HasColumnName("Modified IP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("cargalleries", (string)null);
                });

            modelBuilder.Entity("EntityLayer.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Created AD Username");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("Created By");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Created Computer Name");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created Date");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("text")
                        .HasColumnName("Created IP");

                    b.Property<string>("Email")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModifiedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Modified AD Username");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("Modified By");

                    b.Property<string>("ModifiedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Modified Computer Name");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Modified Date");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("text")
                        .HasColumnName("Modified IP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("EntityLayer.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("CreatedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Created AD Username");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("Created By");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Created Computer Name");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created Date");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("text")
                        .HasColumnName("Created IP");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModifiedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Modified AD Username");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("Modified By");

                    b.Property<string>("ModifiedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Modified Computer Name");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Modified Date");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("text")
                        .HasColumnName("Modified IP");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("EntityLayer.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Created AD Username");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("Created By");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Created Computer Name");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created Date");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("text")
                        .HasColumnName("Created IP");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModifiedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Modified AD Username");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("Modified By");

                    b.Property<string>("ModifiedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Modified Computer Name");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Modified Date");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("text")
                        .HasColumnName("Modified IP");

                    b.Property<int?>("Number")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("OrderId");

                    b.ToTable("orderdetails", (string)null);
                });

            modelBuilder.Entity("EntityLayer.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("CreatedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Created AD Username");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("Created By");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Created Computer Name");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created Date");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("text")
                        .HasColumnName("Created IP");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModifiedADUserName")
                        .HasColumnType("text")
                        .HasColumnName("Modified AD Username");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("Modified By");

                    b.Property<string>("ModifiedComputerName")
                        .HasColumnType("text")
                        .HasColumnName("Modified Computer Name");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Modified Date");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("text")
                        .HasColumnName("Modified IP");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int?>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("EntityLayer.Entities.Car", b =>
                {
                    b.HasOne("EntityLayer.Entities.CarGallery", "CarGallery")
                        .WithMany("Cars")
                        .HasForeignKey("CarGalleryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CarGallery");
                });

            modelBuilder.Entity("EntityLayer.Entities.Customer", b =>
                {
                    b.HasOne("EntityLayer.Entities.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("EntityLayer.Entities.Customer", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EntityLayer.Entities.Order", b =>
                {
                    b.HasOne("EntityLayer.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EntityLayer.Entities.OrderDetail", b =>
                {
                    b.HasOne("EntityLayer.Entities.Car", "Car")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EntityLayer.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EntityLayer.Entities.Car", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EntityLayer.Entities.CarGallery", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("EntityLayer.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EntityLayer.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EntityLayer.Entities.User", b =>
                {
                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
